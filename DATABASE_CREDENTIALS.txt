================================================================================
🔐 TAKHLEES TECH BACKEND - DATABASE & PHPMYADMIN CREDENTIALS
================================================================================

Generated: June 18, 2025
System: Takhlees Tech Microservices Architecture
Environment: Production/Development

================================================================================
📊 PHPMYADMIN ACCESS
================================================================================

Web Interface: http://localhost:8080
Container: phpmyadmin

Connection Method: Select server from dropdown list
Supported Servers: All 5 database servers are pre-configured

Quick Access:
- URL: http://localhost:8080
- No username/password required for interface access
- Select specific database server from dropdown

================================================================================
🗄️ DATABASE SERVERS OVERVIEW
================================================================================

Total Databases: 5
MySQL Version: 8.0
Network: takhlees-network (Docker internal)

Access Methods:
1. phpMyAdmin Web Interface (Recommended)
2. Direct MySQL connection via exposed ports
3. Docker container exec commands

================================================================================
💾 INDIVIDUAL DATABASE CREDENTIALS
================================================================================

┌─────────────────────────────────────────────────────────────────────────────┐
│ 1. ADMIN DATABASE (Logging & Administration)                               │
└─────────────────────────────────────────────────────────────────────────────┘

Container Name: admin-db
Database Name: u676203545_logs
Port (External): 3307
Port (Internal): 3306

ROOT ACCESS:
  Username: root
  Password: root_admin_pass

USER ACCESS:
  Username: admin_user
  Password: admin_pass

Connection Strings:
  External: localhost:3307
  Internal: admin-db:3306
  phpMyAdmin: Select "admin-db" from server list

┌─────────────────────────────────────────────────────────────────────────────┐
│ 2. CUSTOMER SERVICE DATABASE (Support & Forms)                             │
└─────────────────────────────────────────────────────────────────────────────┘

Container Name: customerservice-db
Database Name: u676203545_CustomerServic
Port (External): 3308
Port (Internal): 3306

ROOT ACCESS:
  Username: root
  Password: root_customerservice_pass

USER ACCESS:
  Username: customerservice_user
  Password: customerservice_pass

Connection Strings:
  External: localhost:3308
  Internal: customerservice-db:3306
  phpMyAdmin: Select "customerservice-db" from server list

┌─────────────────────────────────────────────────────────────────────────────┐
│ 3. FIRSTPROJECT DATABASE (Authentication & Main Data)                      │
└─────────────────────────────────────────────────────────────────────────────┘

Container Name: firstproject-db
Database Name: u676203545_mainData
Port (External): 3309
Port (Internal): 3306

ROOT ACCESS:
  Username: root
  Password: root_firstproject_pass

USER ACCESS:
  Username: firstproject_user
  Password: firstproject_pass

Connection Strings:
  External: localhost:3309
  Internal: firstproject-db:3306
  phpMyAdmin: Select "firstproject-db" from server list

┌─────────────────────────────────────────────────────────────────────────────┐
│ 4. USER DATABASE (Orders & User Data)                                      │
└─────────────────────────────────────────────────────────────────────────────┘

Container Name: user-db
Database Name: u676203545_Orders
Port (External): 3310
Port (Internal): 3306

ROOT ACCESS:
  Username: root
  Password: root_user_pass

USER ACCESS:
  Username: user_user
  Password: user_pass

Connection Strings:
  External: localhost:3310
  Internal: user-db:3306
  phpMyAdmin: Select "user-db" from server list

┌─────────────────────────────────────────────────────────────────────────────┐
│ 5. HANGFIRE DATABASE (Background Jobs)                                     │
└─────────────────────────────────────────────────────────────────────────────┘

Container Name: hangfire-db
Database Name: u676203545_HangFire
Port (External): 3311
Port (Internal): 3306

ROOT ACCESS:
  Username: root
  Password: root_hangfire_pass

USER ACCESS:
  Username: hangfire_user
  Password: hangfire_pass

Connection Strings:
  External: localhost:3311
  Internal: hangfire-db:3306
  phpMyAdmin: Select "hangfire-db" from server list

================================================================================
🔧 CONNECTION METHODS
================================================================================

METHOD 1: phpMyAdmin Web Interface (Recommended)
──────────────────────────────────────────────────

1. Open browser: http://localhost:8080
2. Select server from dropdown (admin-db, customerservice-db, etc.)
3. Login with credentials above
4. Manage databases graphically

METHOD 2: Direct MySQL Connection
─────────────────────────────────────

MySQL Workbench / CLI connections:

Admin DB:
  mysql -h localhost -P 3307 -u root -p
  (Password: root_admin_pass)

Customer Service DB:
  mysql -h localhost -P 3308 -u root -p
  (Password: root_customerservice_pass)

FirstProject DB:
  mysql -h localhost -P 3309 -u root -p
  (Password: root_firstproject_pass)

User DB:
  mysql -h localhost -P 3310 -u root -p
  (Password: root_user_pass)

HangFire DB:
  mysql -h localhost -P 3311 -u root -p
  (Password: root_hangfire_pass)

METHOD 3: Docker Container Access
─────────────────────────────────────

Access databases from within Docker network:

docker exec -it admin-db mysql -u root -p
docker exec -it customerservice-db mysql -u root -p
docker exec -it firstproject-db mysql -u root -p
docker exec -it user-db mysql -u root -p
docker exec -it hangfire-db mysql -u root -p

================================================================================
🛠️ MANAGEMENT COMMANDS
================================================================================

View all containers:
  docker ps

Start all databases:
  docker-compose up -d

Stop all databases:
  docker-compose down

View database logs:
  docker logs admin-db
  docker logs customerservice-db
  docker logs firstproject-db
  docker logs user-db
  docker logs hangfire-db

Create database backup:
  docker exec admin-db mysqldump -u root -p u676203545_logs > admin_backup.sql

Restore database:
  docker exec -i admin-db mysql -u root -p u676203545_logs < admin_backup.sql

================================================================================
📋 DATABASE PURPOSES & USAGE
================================================================================

Admin Database (u676203545_logs):
  ├── System logs and audit trails
  ├── Administrative actions tracking
  ├── Error logs and debugging information
  └── Service monitoring data

Customer Service Database (u676203545_CustomerServic):
  ├── Support tickets and forms
  ├── Customer inquiries
  ├── Support agent responses
  └── Service interaction history

FirstProject Database (u676203545_mainData):
  ├── User authentication data
  ├── JWT tokens and security
  ├── User roles and permissions
  ├── Account verification codes
  └── Main system configuration

User Database (u676203545_Orders):
  ├── Order management
  ├── Payment processing records
  ├── User profiles and preferences
  ├── Transaction history
  └── Account statistics

HangFire Database (u676203545_HangFire):
  ├── Background job scheduling
  ├── Recurring task management
  ├── Job execution history
  └── Task queue management

================================================================================
🔒 SECURITY NOTES
================================================================================

⚠️ IMPORTANT SECURITY REMINDERS:

1. These credentials are for development/testing purposes
2. Change all passwords before production deployment
3. Use strong passwords (min 16 characters)
4. Enable SSL/TLS for production database connections
5. Restrict database access by IP in production
6. Regular security audits and password rotation
7. Monitor database access logs

PRODUCTION SECURITY CHECKLIST:
  □ Change all default passwords
  □ Enable database SSL/TLS
  □ Configure firewall rules
  □ Set up database user access restrictions
  □ Enable audit logging
  □ Regular security updates
  □ Backup encryption

================================================================================
📞 TROUBLESHOOTING
================================================================================

Common Issues & Solutions:

ISSUE: Cannot connect to database
SOLUTION: 
  - Check if containers are running: docker ps
  - Verify ports are not in use: netstat -tulpn | grep 330X
  - Restart containers: docker-compose restart

ISSUE: phpMyAdmin not loading
SOLUTION:
  - Check container status: docker logs phpmyadmin
  - Verify port 8080 is available
  - Restart phpMyAdmin: docker restart phpmyadmin

ISSUE: Permission denied
SOLUTION:
  - Use root credentials for full access
  - Check user permissions in MySQL
  - Verify password is correct

ISSUE: Database not found
SOLUTION:
  - Check database name spelling
  - Verify database was created: SHOW DATABASES;
  - Run database migrations if needed

================================================================================
📊 QUICK REFERENCE SUMMARY
================================================================================

phpMyAdmin: http://localhost:8080

Database Ports:
  Admin:          3307
  Customer:       3308
  FirstProject:   3309
  User:           3310
  HangFire:       3311

All Root Passwords:
  admin-db:           root_admin_pass
  customerservice-db: root_customerservice_pass
  firstproject-db:    root_firstproject_pass
  user-db:            root_user_pass
  hangfire-db:        root_hangfire_pass

================================================================================
End of Credentials File
Generated: June 18, 2025
System: Takhlees Tech Backend
================================================================================ 