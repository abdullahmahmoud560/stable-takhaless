// <auto-generated />
using System;
using CustomerSerrvices.ApplicationDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerSerrvices.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20250810101831_Add-LiveChat")]
    partial class AddLiveChat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CustomerSerrvices.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("fullName")
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("forms");
                });

            modelBuilder.Entity("User.Model.saberCertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("saberCertificates");
                });

            modelBuilder.Entity("freelancer.Models.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessageId");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("chatMessages");
                });

            modelBuilder.Entity("freelancer.Models.ChatSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LastMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastMessageTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("User1Id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("User1Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("User2Id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("User2Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("chatSummaries");
                });
#pragma warning restore 612, 618
        }
    }
}
