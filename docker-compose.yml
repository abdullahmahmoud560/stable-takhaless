# ==================================================
# Takhlees Tech Backend - Docker Compose Configuration
# ==================================================
# Production Docker Compose configuration with environment variables
# Use with: docker-compose --env-file .env up -d

services:
  # ========================================
  # MySQL Databases
  # ========================================
  
  # Admin Database
  admin-db:
    image: mysql:${MYSQL_VERSION:-8.0}
    container_name: ${ADMIN_DB_CONTAINER_NAME:-admin-db}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${ADMIN_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${ADMIN_DB_NAME}
      MYSQL_USER: ${ADMIN_DB_USER}
      MYSQL_PASSWORD: ${ADMIN_DB_PASSWORD}
    volumes:
      - admin_db_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "${ADMIN_DB_PORT:-3307}:3306"
    networks:
      - takhlees-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # CustomerService Database
  customerservice-db:
    image: mysql:${MYSQL_VERSION:-8.0}
    container_name: ${CUSTOMERSERVICE_DB_CONTAINER_NAME:-customerservice-db}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${CUSTOMERSERVICE_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${CUSTOMERSERVICE_DB_NAME}
      MYSQL_USER: ${CUSTOMERSERVICE_DB_USER}
      MYSQL_PASSWORD: ${CUSTOMERSERVICE_DB_PASSWORD}
    volumes:
      - customerservice_db_data:/var/lib/mysql
    ports:
      - "${CUSTOMERSERVICE_DB_PORT:-3308}:3306"
    networks:
      - takhlees-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # FirstProject Database
  firstproject-db:
    image: mysql:${MYSQL_VERSION:-8.0}
    container_name: ${FIRSTPROJECT_DB_CONTAINER_NAME:-firstproject-db}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${FIRSTPROJECT_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${FIRSTPROJECT_DB_NAME}
      MYSQL_USER: ${FIRSTPROJECT_DB_USER}
      MYSQL_PASSWORD: ${FIRSTPROJECT_DB_PASSWORD}
    volumes:
      - firstproject_db_data:/var/lib/mysql
    ports:
      - "${FIRSTPROJECT_DB_PORT:-3309}:3306"
    networks:
      - takhlees-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # User Database
  user-db:
    image: mysql:${MYSQL_VERSION:-8.0}
    container_name: ${USER_DB_CONTAINER_NAME:-user-db}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${USER_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${USER_DB_NAME}
      MYSQL_USER: ${USER_DB_USER}
      MYSQL_PASSWORD: ${USER_DB_PASSWORD}
    volumes:
      - user_db_data:/var/lib/mysql
    ports:
      - "${USER_DB_PORT:-3310}:3306"
    networks:
      - takhlees-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # HangFire Database
  hangfire-db:
    image: mysql:${MYSQL_VERSION:-8.0}
    container_name: ${HANGFIRE_DB_CONTAINER_NAME:-hangfire-db}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${HANGFIRE_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${HANGFIRE_DB_NAME}
      MYSQL_USER: ${HANGFIRE_DB_USER}
      MYSQL_PASSWORD: ${HANGFIRE_DB_PASSWORD}
    volumes:
      - hangfire_db_data:/var/lib/mysql
    ports:
      - "${HANGFIRE_DB_PORT:-3311}:3306"
    networks:
      - takhlees-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # ========================================
  # phpMyAdmin
  # ========================================
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${PHPMYADMIN_CONTAINER_NAME:-phpmyadmin}
    restart: unless-stopped
    environment:
      PMA_ARBITRARY: 1
      PMA_HOSTS: ${ADMIN_DB_CONTAINER_NAME:-admin-db},${CUSTOMERSERVICE_DB_CONTAINER_NAME:-customerservice-db},${FIRSTPROJECT_DB_CONTAINER_NAME:-firstproject-db},${USER_DB_CONTAINER_NAME:-user-db},${HANGFIRE_DB_CONTAINER_NAME:-hangfire-db}
      MYSQL_ROOT_PASSWORD: ${PHPMYADMIN_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    depends_on:
      admin-db:
        condition: service_healthy
      customerservice-db:
        condition: service_healthy
      firstproject-db:
        condition: service_healthy
      user-db:
        condition: service_healthy
      hangfire-db:
        condition: service_healthy
    networks:
      - takhlees-network

  # ========================================
  # Application Services
  # ========================================

  # Admin Service
  admin-service:
    build:
      context: .
      dockerfile: Admin/Dockerfile
    container_name: ${ADMIN_SERVICE_CONTAINER_NAME:-admin-service}
    restart: unless-stopped
    environment:
      # Application Configuration
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://+:80
      
      # Database Configuration
      ConnectionStrings__DefaultConnection: Server=${ADMIN_DB_CONTAINER_NAME:-admin-db};Database=${ADMIN_DB_NAME};User=${ADMIN_DB_USER};Password=${ADMIN_DB_PASSWORD};SslMode=Preferred;
      ConnectionStrings__Connection: Server=${ADMIN_DB_CONTAINER_NAME:-admin-db};Database=${ADMIN_DB_NAME};User=${ADMIN_DB_USER};Password=${ADMIN_DB_PASSWORD};
      
      # JWT Settings
      JWT__Issuer: ${JWT_ISSUER}
      JWT__Audience: ${JWT_AUDIENCE}
      JWT__SecretKey: ${JWT_SECRET_KEY}
      
      # Admin Configuration
      Admin__SuperAdminEmail: ${ADMIN_SUPER_ADMIN_EMAIL}
      Admin__SuperAdminPassword: ${ADMIN_SUPER_ADMIN_PASSWORD}
      Admin__DefaultPageSize: ${ADMIN_DEFAULT_PAGE_SIZE:-20}
      Admin__MaxPageSize: ${ADMIN_MAX_PAGE_SIZE:-100}
      
      # External Services URLs
      FirstProjectService__BaseUrl: http://${FIRSTPROJECT_SERVICE_CONTAINER_NAME:-firstproject-service}:${FIRSTPROJECT_SERVICE_INTERNAL_PORT:-9100}
      UserService__BaseUrl: http://${USER_SERVICE_CONTAINER_NAME:-user-service}:80
      CustomerService__BaseUrl: http://${CUSTOMERSERVICE_SERVICE_CONTAINER_NAME:-customerservice-service}:80
      
      # CORS Configuration
      CORS__AllowedOrigins: ${CORS_ALLOWED_ORIGINS}
      CORS__AllowCredentials: ${CORS_ALLOW_CREDENTIALS:-true}
    ports:
      - "${ADMIN_SERVICE_PORT:-5001}:80"
    depends_on:
      admin-db:
        condition: service_healthy
    volumes:
      - admin_logs:/app/logs
    networks:
      - takhlees-network

  # CustomerService
  customerservice-service:
    build:
      context: .
      dockerfile: CustomerService/Dockerfile
    container_name: ${CUSTOMERSERVICE_SERVICE_CONTAINER_NAME:-customerservice-service}
    restart: unless-stopped
    environment:
      # Application Configuration
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://+:80
      
      # Database Configuration
      ConnectionStrings__DefaultConnection: Server=${CUSTOMERSERVICE_DB_CONTAINER_NAME:-customerservice-db};Database=${CUSTOMERSERVICE_DB_NAME};User=${CUSTOMERSERVICE_DB_USER};Password=${CUSTOMERSERVICE_DB_PASSWORD};SslMode=Preferred;
      ConnectionStrings__Connection: Server=${CUSTOMERSERVICE_DB_CONTAINER_NAME:-customerservice-db};Database=${CUSTOMERSERVICE_DB_NAME};User=${CUSTOMERSERVICE_DB_USER};Password=${CUSTOMERSERVICE_DB_PASSWORD};
      
      # JWT Settings
      JWT__Issuer: ${JWT_ISSUER}
      JWT__Audience: ${JWT_AUDIENCE}
      JWT__SecretKey: ${JWT_SECRET_KEY}
      
      # CORS Configuration
      CORS__AllowedOrigins: ${CORS_ALLOWED_ORIGINS}
      CORS__AllowCredentials: ${CORS_ALLOW_CREDENTIALS:-true}
    ports:
      - "${CUSTOMERSERVICE_SERVICE_PORT:-5002}:80"
    depends_on:
      customerservice-db:
        condition: service_healthy
    volumes:
      - customerservice_uploads:/app/uploads
    networks:
      - takhlees-network

  # FirstProject Service (Main Auth Service)
  firstproject-service:
    build:
      context: .
      dockerfile: firstProject/Dockerfile
    container_name: ${FIRSTPROJECT_SERVICE_CONTAINER_NAME:-firstproject-service}
    restart: unless-stopped
    environment:
      # Application Configuration
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://+:${FIRSTPROJECT_SERVICE_INTERNAL_PORT:-9100}
      PORT: ${FIRSTPROJECT_SERVICE_INTERNAL_PORT:-9100}
      
      # Database Configuration
      ConnectionStrings__DefaultConnection: Server=${FIRSTPROJECT_DB_CONTAINER_NAME:-firstproject-db};Database=${FIRSTPROJECT_DB_NAME};User=${FIRSTPROJECT_DB_USER};Password=${FIRSTPROJECT_DB_PASSWORD};SslMode=Preferred;
      ConnectionStrings__Connection: Server=${FIRSTPROJECT_DB_CONTAINER_NAME:-firstproject-db};Database=${FIRSTPROJECT_DB_NAME};User=${FIRSTPROJECT_DB_USER};Password=${FIRSTPROJECT_DB_PASSWORD};
      
      # JWT Settings
      JWT__Issuer: ${JWT_ISSUER}
      JWT__Audience: ${JWT_AUDIENCE}
      JWT__SecretKey: ${JWT_SECRET_KEY}
      
      # CORS Configuration
      CORS__AllowedOrigins: ${CORS_ALLOWED_ORIGINS}
      CORS__AllowCredentials: ${CORS_ALLOW_CREDENTIALS:-true}
      
      # Email Configuration
      EmailConfiguration__From: ${EMAIL_FROM}
      EmailConfiguration__SmtpServer: ${EMAIL_SMTP_SERVER}
      EmailConfiguration__Port: ${EMAIL_PORT}
      EmailConfiguration__Username: ${EMAIL_USERNAME}
      EmailConfiguration__Password: ${EMAIL_PASSWORD}
      EmailConfiguration__UseSSL: ${EMAIL_USE_SSL:-false}
    ports:
      - "${FIRSTPROJECT_SERVICE_PORT:-9100}:${FIRSTPROJECT_SERVICE_INTERNAL_PORT:-9100}"
    depends_on:
      firstproject-db:
        condition: service_healthy
    networks:
      - takhlees-network

  # User Service
  user-service:
    build:
      context: .
      dockerfile: User/Dockerfile
    container_name: ${USER_SERVICE_CONTAINER_NAME:-user-service}
    restart: unless-stopped
    environment:
      # Application Configuration
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://+:80
      
      # Database Configuration
      ConnectionStrings__DefaultConnection: Server=${USER_DB_CONTAINER_NAME:-user-db};Database=${USER_DB_NAME};User=${USER_DB_USER};Password=${USER_DB_PASSWORD};SslMode=Preferred;
      ConnectionStrings__Connection: Server=${USER_DB_CONTAINER_NAME:-user-db};Database=${USER_DB_NAME};User=${USER_DB_USER};Password=${USER_DB_PASSWORD};
      ConnectionStrings__HangeFire: Server=${HANGFIRE_DB_CONTAINER_NAME:-hangfire-db};Database=${HANGFIRE_DB_NAME};User=${HANGFIRE_DB_USER};Password=${HANGFIRE_DB_PASSWORD};
      
      # JWT Settings
      JWT__Issuer: ${JWT_ISSUER}
      JWT__Audience: ${JWT_AUDIENCE}
      JWT__SecretKey: ${JWT_SECRET_KEY}
      
      # PayPal Configuration
      PayPal__ClientId: ${PAYPAL_CLIENT_ID}
      PayPal__Secret: ${PAYPAL_SECRET}
      PayPal__IsSandbox: ${PAYPAL_IS_SANDBOX:-false}
      
      # Email Configuration
      EmailConfiguration__From: ${EMAIL_FROM}
      EmailConfiguration__SmtpServer: ${EMAIL_SMTP_SERVER}
      EmailConfiguration__Port: ${EMAIL_PORT:-587}
      EmailConfiguration__Username: ${EMAIL_USERNAME}
      EmailConfiguration__Password: ${EMAIL_PASSWORD}
      EmailConfiguration__UseSSL: ${EMAIL_USE_SSL:-false}
      
      # CORS Configuration
      CORS__AllowedOrigins: ${CORS_ALLOWED_ORIGINS}
      CORS__AllowCredentials: ${CORS_ALLOW_CREDENTIALS:-true}
    ports:
      - "${USER_SERVICE_PORT:-5003}:80"
    depends_on:
      user-db:
        condition: service_healthy
      hangfire-db:
        condition: service_healthy
    networks:
      - takhlees-network

  # ========================================
  # Reverse Proxy (Nginx)
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: ${NGINX_CONTAINER_NAME:-nginx-proxy}
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-8090}:80"
      - "${NGINX_HTTPS_PORT:-8444}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - admin-service
      - customerservice-service
      - firstproject-service
      - user-service
    networks:
      - takhlees-network

# ========================================
# Volumes
# ========================================
volumes:
  admin_db_data:
  customerservice_db_data:
  firstproject_db_data:
  user_db_data:
  hangfire_db_data:
  admin_logs:
  customerservice_uploads:

# ========================================
# Networks
# ========================================
networks:
  takhlees-network:
    driver: bridge 