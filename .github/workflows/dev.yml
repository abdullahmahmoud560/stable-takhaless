name: Deploy to Server

on:
  push:
    branches: [ dev ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"takhleesak-back" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST_dev }}
        username: ${{ secrets.SERVER_USERNAME_dev }}
        key: ${{ secrets.SERVER_SSH_PRIVATE_KEY_dev }}
        port: ${{ secrets.SERVER_PORT_dev }}
        timeout: 300s
        command_timeout: 600s
        script: |
          # Navigate to project directory
          cd ${{ secrets.SERVER_PROJECT_PATH_dev }}
          
          # Pull latest changes from git repo and token
          git pull https://${{ secrets.SERVER_NAME_dev }}:${{ secrets.SERVER_TOKEN_dev }}@github.com/${{ github.repository }}.git ${{ github.ref_name }}
          
          # Stop existing containers
          docker compose down
          
          # Build and start containers
          docker compose up --build -d
          
          # Wait for services to start
          sleep 30
          
          # Check if main services are running
          docker ps --filter "name=admin-service" --filter "name=customerservice-service" --filter "name=firstproject-service" --filter "name=user-service" --filter "name=nginx-proxy"
          
    - name: Get short SHA
      id: short-sha
      run: echo "short-sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
      
    - name: Get deployment info
      id: deploy-info
      run: |
        echo "timestamp=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
        echo "trigger=${{ github.event_name }}" >> $GITHUB_OUTPUT
        echo "run-number=${{ github.run_number }}" >> $GITHUB_OUTPUT
        
        # Get commit info
        echo "commit-date=$(git show -s --format=%ci ${{ github.sha }})" >> $GITHUB_OUTPUT
        echo "commit-author=$(git show -s --format='%an' ${{ github.sha }})" >> $GITHUB_OUTPUT
        echo "commit-email=$(git show -s --format='%ae' ${{ github.sha }})" >> $GITHUB_OUTPUT
        
        # Get file changes
        FILES_CHANGED=$(git diff --name-only ${{ github.event.before }}..${{ github.sha }} 2>/dev/null | wc -l || echo "N/A")
        ADDITIONS=$(git diff --shortstat ${{ github.event.before }}..${{ github.sha }} 2>/dev/null | grep -o '[0-9]* insertion' | grep -o '[0-9]*' || echo "0")
        DELETIONS=$(git diff --shortstat ${{ github.event.before }}..${{ github.sha }} 2>/dev/null | grep -o '[0-9]* deletion' | grep -o '[0-9]*' || echo "0")
        
        echo "files-changed=$FILES_CHANGED" >> $GITHUB_OUTPUT
        echo "additions=$ADDITIONS" >> $GITHUB_OUTPUT
        echo "deletions=$DELETIONS" >> $GITHUB_OUTPUT
        
        # Get branch info
        echo "default-branch=${{ github.event.repository.default_branch }}" >> $GITHUB_OUTPUT
        echo "is-main-branch=${{ github.ref_name == github.event.repository.default_branch }}" >> $GITHUB_OUTPUT
        
        # Environment URLs (customize these for your environments)
        if [ "${{ github.event.inputs.environment || github.ref_name }}" = "production" ] || [ "${{ github.ref_name }}" = "main" ] || [ "${{ github.ref_name }}" = "stable-performance" ]; then
          echo "app-url=https://test.takhleesak.com/" >> $GITHUB_OUTPUT
          echo "admin-url=https://admin.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "customer-service-url=https://customerservices.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "auth-url=https://firstproject.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "user-url=https://user.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "phpmyadmin-url=https://takhleesak.com:8080/" >> $GITHUB_OUTPUT
          echo "env-type=üî¥ Production" >> $GITHUB_OUTPUT
        elif [ "${{ github.event.inputs.environment }}" = "staging" ]; then
          echo "app-url=https://staging.takhleesak.com/" >> $GITHUB_OUTPUT
          echo "admin-url=https://staging-admin.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "customer-service-url=https://staging-customerservices.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "auth-url=https://staging-firstproject.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "user-url=https://staging-user.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "phpmyadmin-url=https://staging.takhleesak.com:8080/" >> $GITHUB_OUTPUT
          echo "env-type=üü° Staging" >> $GITHUB_OUTPUT
        else
          echo "app-url=https://dev.takhleesak.com/" >> $GITHUB_OUTPUT
          echo "admin-url=https://dev-admin.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "customer-service-url=https://dev-customerservices.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "auth-url=https://dev-firstproject.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "user-url=https://dev-user.takhleesak.com/swagger/index.html" >> $GITHUB_OUTPUT
          echo "phpmyadmin-url=https://dev.takhleesak.com:8080/" >> $GITHUB_OUTPUT
          echo "env-type=üü¢ Development" >> $GITHUB_OUTPUT
        fi
        
    - name: Print deployment summary
      run: |
        echo "üöÄ Takhlees Tech Back-end Deployment Summary"
        echo "==========================================="
        echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ steps.short-sha.outputs.short-sha }}"
        echo "Timestamp: ${{ steps.deploy-info.outputs.timestamp }}"
        echo "Triggered by: ${{ github.actor }}"
        echo "Files changed: ${{ steps.deploy-info.outputs.files-changed }}"
        echo "Additions: ${{ steps.deploy-info.outputs.additions }}"
        echo "Deletions: ${{ steps.deploy-info.outputs.deletions }}"
        echo "==========================================="
        echo "üéØ Microservices Deployed:"
        echo "  - Admin Service (admin.takhleesak.com)"
        echo "  - Customer Service (customerservices.takhleesak.com)"
        echo "  - Auth Service (firstproject.takhleesak.com)"
        echo "  - User Service (user.takhleesak.com)"
        echo "  - Nginx Proxy (Port 8090)"
        echo "  - phpMyAdmin (Port 8080)"
        echo "==========================================="
        echo "‚úÖ Deployment completed successfully!" 

    - name: Send deployment notification email
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{ secrets.SMTP_SERVER }}
        server_port: ${{ secrets.SMTP_PORT }}
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: |
          ${{ job.status == 'success' && '‚úÖ' || '‚ùå' }} Takhlees Tech Backend Deployment ${{ job.status == 'success' && 'Successful' || 'Failed' }} - ${{ github.repository }} (${{ steps.deploy-info.outputs.env-type }})
        to: cicd@takhleesak.com
        from: ${{ secrets.SMTP_FROM_EMAIL }}
        html_body: |
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="UTF-8">
              <style>
                  body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                  .container { max-width: 700px; margin: 0 auto; padding: 20px; }
                  .header { background-color: ${{ job.status == 'success' && '#28a745' || '#dc3545' }}; color: white; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
                  .content { background-color: #f8f9fa; padding: 20px; border-radius: 0 0 5px 5px; }
                  .info-table { width: 100%; border-collapse: collapse; margin: 20px 0; }
                  .info-table th, .info-table td { padding: 10px; border-bottom: 1px solid #ddd; text-align: left; }
                  .info-table th { background-color: #e9ecef; font-weight: bold; }
                  .status-success { color: #28a745; font-weight: bold; }
                  .status-failed { color: #dc3545; font-weight: bold; }
                  .commit-info { background-color: #e9ecef; padding: 15px; border-radius: 5px; margin: 15px 0; }
                  .services-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; margin: 20px 0; }
                  .service-card { background-color: #fff; padding: 15px; border-radius: 5px; border-left: 4px solid #007bff; }
                  .service-card h4 { margin: 0 0 10px 0; color: #007bff; }
                  .footer { text-align: center; margin-top: 20px; font-size: 12px; color: #666; }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="header">
                      <h1>${{ job.status == 'success' && '‚úÖ Deployment Successful' || '‚ùå Deployment Failed' }}</h1>
                      <p>üöÄ Takhlees Tech Backend Microservices</p>
                      <p>Repository: ${{ github.repository }}</p>
                  </div>
                  
                  <div class="content">
                      <table class="info-table">
                          <tr>
                              <th>Status</th>
                              <td class="${{ job.status == 'success' && 'status-success' || 'status-failed' }}">
                                  ${{ job.status == 'success' && 'SUCCESS' || 'FAILED' }}
                              </td>
                          </tr>
                          <tr>
                              <th>Environment</th>
                              <td>${{ steps.deploy-info.outputs.env-type }}</td>
                          </tr>
                          <tr>
                              <th>Branch</th>
                              <td>${{ github.ref_name }}</td>
                          </tr>
                          <tr>
                              <th>Commit</th>
                              <td>${{ steps.short-sha.outputs.short-sha }}</td>
                          </tr>
                          <tr>
                              <th>Triggered By</th>
                              <td>${{ github.actor }}</td>
                          </tr>
                          <tr>
                              <th>Deployment Time</th>
                              <td>${{ steps.deploy-info.outputs.timestamp }}</td>
                          </tr>
                          <tr>
                              <th>Workflow Run</th>
                              <td><a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">#${{ github.run_number }}</a></td>
                          </tr>
                      </table>
                      
                      <div class="commit-info">
                          <h3>üìù Commit Details</h3>
                          <p><strong>Author:</strong> ${{ steps.deploy-info.outputs.commit-author }}</p>
                          <p><strong>Email:</strong> ${{ steps.deploy-info.outputs.commit-email }}</p>
                          <p><strong>Date:</strong> ${{ steps.deploy-info.outputs.commit-date }}</p>
                          <p><strong>Message:</strong> ${{ github.event.head_commit.message }}</p>
                      </div>
                      
                      <div class="commit-info">
                          <h3>üìä Change Statistics</h3>
                          <p><strong>Files Changed:</strong> ${{ steps.deploy-info.outputs.files-changed }}</p>
                          <p><strong>Additions:</strong> +${{ steps.deploy-info.outputs.additions }}</p>
                          <p><strong>Deletions:</strong> -${{ steps.deploy-info.outputs.deletions }}</p>
                      </div>
                      
                      <div class="commit-info">
                          <h3>üéØ Deployed Microservices</h3>
                          <div class="services-grid">
                              <div class="service-card">
                                  <h4>üîß Admin Service</h4>
                                  <p>Subdomain: admin.takhleesak.com</p>
                                  <p><a href="${{ steps.deploy-info.outputs.admin-url }}">Access Admin API Docs</a></p>
                              </div>
                              <div class="service-card">
                                  <h4>üéß Customer Service</h4>
                                  <p>Subdomain: customerservices.takhleesak.com</p>
                                  <p><a href="${{ steps.deploy-info.outputs.customer-service-url }}">Access Customer Service API Docs</a></p>
                              </div>
                              <div class="service-card">
                                  <h4>üîê Auth Service</h4>
                                  <p>Subdomain: firstproject.takhleesak.com</p>
                                  <p><a href="${{ steps.deploy-info.outputs.auth-url }}">Access Auth API Docs</a></p>
                              </div>
                              <div class="service-card">
                                  <h4>üë§ User Service</h4>
                                  <p>Subdomain: user.takhleesak.com</p>
                                  <p><a href="${{ steps.deploy-info.outputs.user-url }}">Access User API Docs</a></p>
                              </div>
                              <div class="service-card">
                                  <h4>üóÑÔ∏è phpMyAdmin</h4>
                                  <p>Port: 8080</p>
                                  <p><a href="${{ steps.deploy-info.outputs.phpmyadmin-url }}">Access Database</a></p>
                              </div>
                          </div>
                      </div>
                      
                      ${{ steps.deploy-info.outputs.app-url != '' && format('<p><strong>üåê Main Application URL:</strong> <a href="{0}">{0}</a></p>', steps.deploy-info.outputs.app-url) || '' }}
                      
                      <div class="footer">
                          <p>This is an automated message from GitHub Actions CI/CD pipeline.</p>
                          <p>Repository: ${{ github.repository }} | Run ID: ${{ github.run_id }}</p>
                          <p>üöÄ Takhlees Technology - Microservices Backend</p>
                      </div>
                  </div>
              </div>
          </body>
          </html>
        body: |
          üöÄ Takhlees Tech Backend Deployment ${{ job.status == 'success' && 'Successful' || 'Failed' }} - ${{ github.repository }}
          
          Status: ${{ job.status == 'success' && 'SUCCESS ‚úÖ' || 'FAILED ‚ùå' }}
          Environment: ${{ steps.deploy-info.outputs.env-type }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ steps.short-sha.outputs.short-sha }}
          Triggered By: ${{ github.actor }}
          Deployment Time: ${{ steps.deploy-info.outputs.timestamp }}
          
          üéØ Microservices Deployed:
          - Admin Service (admin.takhleesak.com): ${{ steps.deploy-info.outputs.admin-url }}
          - Customer Service (customerservices.takhleesak.com): ${{ steps.deploy-info.outputs.customer-service-url }}
          - Auth Service (firstproject.takhleesak.com): ${{ steps.deploy-info.outputs.auth-url }}
          - User Service (user.takhleesak.com): ${{ steps.deploy-info.outputs.user-url }}
          - phpMyAdmin (Port 8080): ${{ steps.deploy-info.outputs.phpmyadmin-url }}
          
          Commit Details:
          - Author: ${{ steps.deploy-info.outputs.commit-author }}
          - Email: ${{ steps.deploy-info.outputs.commit-email }}
          - Date: ${{ steps.deploy-info.outputs.commit-date }}
          - Message: ${{ github.event.head_commit.message }}
          
          Change Statistics:
          - Files Changed: ${{ steps.deploy-info.outputs.files-changed }}
          - Additions: +${{ steps.deploy-info.outputs.additions }}
          - Deletions: -${{ steps.deploy-info.outputs.deletions }}
          
          Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          ${{ steps.deploy-info.outputs.app-url != '' && format('Main Application URL: {0}', steps.deploy-info.outputs.app-url) || '' }}
          
          ---
          This is an automated message from GitHub Actions CI/CD pipeline.
          üöÄ Takhlees Technology - Microservices Backend 